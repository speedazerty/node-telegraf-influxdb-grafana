apiVersion: v1
items:
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-10-30T17:32:58Z
    generation: 1
    labels:
      app: grafana
      version: 3.1.1-1470047149
    name: grafana
    namespace: default
    resourceVersion: "56214"
    selfLink: /api/v1/namespaces/default/replicationcontrollers/grafana
    uid: e6414617-9ec6-11e6-9172-3617dadeded8
  spec:
    replicas: 1
    selector:
      app: grafana
      version: 3.1.1-1470047149
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: grafana
          version: 3.1.1-1470047149
        name: grafana
      spec:
        containers:
        - image: grafana/grafana:3.1.1-1470047149
          imagePullPolicy: IfNotPresent
          name: grafana
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-11-01T02:05:25Z
    generation: 1
    labels:
      app: influxdb
      version: 1.0.2
    name: influxdb
    namespace: default
    resourceVersion: "56207"
    selfLink: /api/v1/namespaces/default/replicationcontrollers/influxdb
    uid: a777be29-9fd7-11e6-8b26-86d5263be218
  spec:
    replicas: 1
    selector:
      app: influxdb
      version: 1.0.2
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: influxdb
          version: 1.0.2
        name: influxdb
      spec:
        containers:
        - image: influxdb:1.0.2
          imagePullPolicy: IfNotPresent
          name: influxdb
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-10-30T18:12:54Z
    generation: 24
    labels:
      app: node-test
      version: latest
    name: node-test
    namespace: default
    resourceVersion: "66170"
    selfLink: /api/v1/namespaces/default/replicationcontrollers/node-test
    uid: 7a5280c3-9ecc-11e6-9172-3617dadeded8
  spec:
    replicas: 3
    selector:
      app: node-test
      version: latest
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: node-test
          version: latest
        name: node-test
      spec:
        containers:
        - env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: STATSD_HOST
            value: telegraf
          - name: STATSD_PORT
            value: "8125"
          - name: APP_TYPE
            value: server
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: speedazerty/node-statsd:latest
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                - node
                - build/ContainerNotify.js
          name: node-test
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 3
    observedGeneration: 24
    replicas: 3
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-11-01T03:41:35Z
    generation: 1
    labels:
      app: requester
      version: latest
    name: requester
    namespace: default
    resourceVersion: "62291"
    selfLink: /api/v1/namespaces/default/replicationcontrollers/requester
    uid: 16aa4c49-9fe5-11e6-86f4-023e5527f855
  spec:
    replicas: 1
    selector:
      app: requester
      version: latest
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: requester
          version: latest
        name: requester
      spec:
        containers:
        - env:
          - name: APP_TYPE
            value: requester
          - name: APP_HOST
            value: node-test
          - name: APP_PORT
            value: "8080"
          image: speedazerty/node-statsd:latest
          imagePullPolicy: Always
          name: requester
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
- apiVersion: v1
  kind: ReplicationController
  metadata:
    creationTimestamp: 2016-10-30T17:32:14Z
    generation: 1
    labels:
      app: telegraf
      version: latest
    name: telegraf
    namespace: default
    resourceVersion: "56210"
    selfLink: /api/v1/namespaces/default/replicationcontrollers/telegraf
    uid: cbfd523c-9ec6-11e6-9172-3617dadeded8
  spec:
    replicas: 1
    selector:
      app: telegraf
      version: latest
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: telegraf
          version: latest
        name: telegraf
      spec:
        containers:
        - image: speedazerty/telegraf:latest
          imagePullPolicy: Always
          name: telegraf
          resources: {}
          securityContext:
            privileged: false
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    fullyLabeledReplicas: 1
    observedGeneration: 1
    replicas: 1
kind: List
metadata: {}
